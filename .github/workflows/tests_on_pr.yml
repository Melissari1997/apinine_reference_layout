name: "Run tests on PR"

on:
  pull_request:
    branches: ["main"]

env:
  aws-role-name: github_actions_role
  aws-account-id: 600920596656
  aws-region: eu-central-1
  domain_name: eoliann.api

permissions:
  id-token: write
  contents: read
  issues: write # to write a comment on the PR

jobs:
  code_testall:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.aws-region }}
          role-to-assume: arn:aws:iam::${{ env.aws-account-id }}:role/${{ env.aws-role-name }}
          role-session-name: ${{ env.aws-role-name }}-session

      - name: Run tests
        run: |
          cd src
          GITHUB_TOKEN=$(aws secretsmanager get-secret-value --secret-id github_readonly --output text --query SecretString)
          make testall

      - name: Run dockerized risks tests
        run: |
          cd src
          make docker_risks

  tf_plan:
    permissions: write-all
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
        working-directory: ./infra/api

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Plan apinine
        uses: ./.github/actions/terraform-plan
        with:
          aws-region: eu-central-1
          aws-account-id: 600920596656
          terraform_role_name: github_actions_terraform_apinine
          terraform_version: "1.7.4"
          backend_bucket: terraform-be-bucket
          backend_key: apinine/terraform.tfstate
          lock_table: terraform-be-locktable
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          working-directory: infra/api

  apidoc:
    permissions: write-all
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
        working-directory: ./infra/apidoc

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up node
        uses: actions/setup-node@v4

      - name: Install Redocly CLI
        run: npm install -g @redocly/cli@latest

      - name: Copy openapi.yaml
        run: cp ../../openapi.yml.tpl ./openapi.yaml

      - name: Substitute domain name
        run: sed -i -e 's/${domain_name}/${{ env.domain_name }}/g' openapi.yaml

      - name: Filter openapi.yaml
        run: redocly bundle filterout -o filtered.yaml --config ./redocly.yaml

      - name: Build redocly
        run: redocly build-docs filtered.yaml --output=index.html --config ./redocly.yaml

      - name: Plan apidoc
        uses: ./.github/actions/terraform-plan
        with:
          aws-region: eu-central-1
          aws-account-id: 600920596656
          terraform_role_name: github_actions_terraform_apidoc
          terraform_version: "1.7.4"
          backend_bucket: terraform-be-bucket
          backend_key: apidoc/terraform.tfstate
          lock_table: terraform-be-locktable
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          working-directory: infra/apidoc
          clean-checkout: false
