name: build-push-flood-rcps

on:
  workflow_call:
    inputs:
      aws-role-name:
        required: true
        description: "Role that github will assume"
        type: string
      aws-account-id:
        required: true
        type: string
      aws-region:
        required: true
        type: string
      climate-scenario:
        required: true
        type: string
        description: "Keywords used to identify which items to select from the json file"
      image-name:
        required: true
        type: string
      lambda-name:
        required: true
        type: string
      risk-folder:
        description: "Name of the folder containing the Dockerfile"
        required: true
        type: string

jobs:
  build-and-push:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Test Common
        run: |
          cd src/api
          make schema_test

      - name: Parse build args and docker tags
        id: parse-geotiff-path
        run: |
          GEOTIFF_JSON=$(
            cat src/api/${{ inputs.risk-folder }}/build-env-variables.json |
            jq --compact-output 'map(select(.climate_scenario == "${{ inputs.climate-scenario }}"))'
          )

          YEARS=$(echo $GEOTIFF_JSON | jq --compact-output 'map(.year) | join(" ")' | sed 's/"//g')
          S3_PATHS=$(echo $GEOTIFF_JSON | jq --compact-output 'map(.path) | join(" ")' | sed 's/"//g' | sed 's/s3:\/\///g' | tr '/' '-')

          DOCKER_TAGS="${{ inputs.climate-scenario }} ${YEARS} ${S3_PATHS}"

          # Put it inside the GitHub env
          echo "GEOTIFF_JSON='$GEOTIFF_JSON'" >> $GITHUB_OUTPUT
          echo "DOCKER_TAGS=\"$DOCKER_TAGS\"" >> $GITHUB_OUTPUT

      - name: Build and push specific image
        id: build-push-layout
        uses: ./.github/actions/build-push-layout
        with:
          aws-role-name: ${{ inputs.aws-role-name }}
          aws-account-id: ${{ inputs.aws-account-id }}
          aws-region: ${{ inputs.aws-region }}
          geotiff-json: ${{ steps.parse-geotiff-path.outputs.GEOTIFF_JSON }}
          docker-tags: ${{ steps.parse-geotiff-path.outputs.DOCKER_TAGS }}
          risk-folder: ${{ inputs.risk-folder }}
          image-name: ${{ inputs.image-name }}
          lambda-name: ${{ inputs.lambda-name }}
