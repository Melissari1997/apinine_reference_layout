name: flood

on:
  push:
    paths:
      - 'src/api/flood/**'
      - 'src/api/common/**'
      - '.github/workflows/flood.yml'
    branches: [ "main" ]

env:
  image_name: apinine_flood
  lambda_name: apinine_flood

permissions:
  id-token: write
  contents: read

jobs:
  apinine-flood-build-and-push:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: eu-central-1
        role-to-assume: arn:aws:iam::600920596656:role/gh_flood
        role-session-name: gh_flood_session

    - name: Authenticate Docker to Amazon ECR
      run: aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 600920596656.dkr.ecr.eu-central-1.amazonaws.com

    - name: Build Docker Image and run tests
      run: |
        cd src/api
        docker build --target test -f flood/Dockerfile .
        docker build -t ${image_name}:latest --build-arg GITHUB_SHA=${GITHUB_SHA} --target production .

    - name: Tag Docker Image
      run: |
        docker tag ${image_name}:latest 600920596656.dkr.ecr.eu-central-1.amazonaws.com/${image_name}:${GITHUB_SHA}
        docker tag ${image_name}:latest 600920596656.dkr.ecr.eu-central-1.amazonaws.com/${image_name}:latest

    - name: Push Docker Image to ECR
      run: |
        docker push 600920596656.dkr.ecr.eu-central-1.amazonaws.com/${image_name}:${GITHUB_SHA}
        docker push 600920596656.dkr.ecr.eu-central-1.amazonaws.com/${image_name}:latest

    # - name: Update lambda function
    #   run: aws lambda update-function-code --function-name ${lambda_name} --image-uri 600920596656.dkr.ecr.eu-central-1.amazonaws.com/${image_name}:latest
