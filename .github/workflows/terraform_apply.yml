name: "Terraform apply"

on:
  push:
    paths:
      - "infra/**"
      - "openapi.yml.tpl"
      - ".github/workflows/terraform_apply.yml"
    branches: ["main"]
permissions:
  id-token: write
  contents: read
  issues: write

env:
  aws-account-id: 600920596656
  aws-region: eu-central-1
  #TF_LOG: INFO
  TF_IN_AUTOMATION: 1
  terraform_version: "1.7.4"
  terraform_role_name: github_actions_terraform_apinine
  backend_bucket: terraform-be-bucket
  backend_key: apinine/terraform.tfstate
  lock_table: terraform-be-locktable

jobs:
  tf_plan:
    permissions: write-all
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
        working-directory: ./infra

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.aws-region }}
          role-to-assume: arn:aws:iam::${{ env.aws-account-id }}:role/${{ env.terraform_role_name }}
          role-session-name: ${{ env.terraform_role_name }}-session

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.terraform_version }}

      - name: Terraform format
        id: fmt
        run: terraform fmt -check

      - name: Terraform init
        id: init
        # setup bucket and lock table
        run: |
          terraform init \
            -backend-config="bucket=${{ env.backend_bucket }}" \
            -backend-config="key=${{ env.backend_key }}" \
            -backend-config="dynamodb_table=${{ env.lock_table }}"

      - name: Terraform validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        run: terraform plan >/dev/null -input=false -no-color -out=tfplan

      - name: Show Plan
        id: show_plan
        run: terraform show tfplan -no-color

      - name: Comment issue
        uses: actions/github-script@v6
        env:
          SHOW_PLAN_OUTPUT: "${{ steps.show_plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const MAX_LEN = 65000;
            const plan = process.env.SHOW_PLAN_OUTPUT;
            for (let i = 0; i < plan.length; i += MAX_LEN) {
              const partial_plan = plan.substring(i, i + MAX_LEN);
              const output = `<details><summary>Plan output</summary>
                \`\`\`\n
                ${partial_plan}
                \`\`\`
                </details>
              `;
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              });
            }

      - name: Approve Plan to Apply
        uses: trstringer/manual-approval@v1
        timeout-minutes: 10
        with:
          secret: ${{ github.TOKEN }}
          minimum-approvals: 1
          approvers: ggrangia,fromgold,gionnid
          issue-title: "Approve Terraform Plan to be applied"
          issue-body: "Review the terraform plan, then approve or deny the deployment to prod"
          exclude-workflow-initiator-as-approver: false

      - name: Apply plan
        id: apply
        run: terraform apply -input=false tfplan
